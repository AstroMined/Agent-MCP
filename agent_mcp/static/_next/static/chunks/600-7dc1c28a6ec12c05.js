"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[600],{1204:(e,t,r)=>{r.d(t,{$:()=>a,j:()=>n});var s=r(9509);let a={defaultServer:{host:s.env.NEXT_PUBLIC_DEFAULT_SERVER_HOST||"localhost",port:parseInt(s.env.NEXT_PUBLIC_DEFAULT_SERVER_PORT||"8080"),name:s.env.NEXT_PUBLIC_DEFAULT_SERVER_NAME||"Local Development"},autoDetect:{enabled:"false"!==s.env.NEXT_PUBLIC_AUTO_CONNECT,ports:(s.env.NEXT_PUBLIC_AUTO_DETECT_PORTS||"8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,3000,3001,3002,3003,4000,4001,5000,5001").split(",").map(e=>parseInt(e.trim())).filter(e=>!isNaN(e))},api:{timeout:5e3,retryCount:3,retryDelay:1e3}};function n(){return a.autoDetect.ports.map(e=>({host:a.defaultServer.host,port:e}))}},1886:(e,t,r)=>{r.d(t,{uE:()=>a});class s{setServer(e,t){this.baseUrl="http://".concat(e,":").concat(t)}getServerUrl(){return this.baseUrl}async request(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.baseUrl)throw Error("NO_SERVER_CONNECTED");let r="".concat(this.baseUrl,"/api").concat(e),s=await fetch(r,{headers:{"Content-Type":"application/json",...t.headers},credentials:"include",mode:"cors",...t});if(!s.ok)throw Error("API Error: ".concat(s.status," ").concat(s.statusText));return s.json()}async getSystemStatus(){return this.request("/status")}async getGraphData(){return this.request("/graph-data")}async getTaskTreeData(){return this.request("/task-tree-data")}async getAgents(){return this.request("/agents")}async getAgent(e){return this.request("/agents/".concat(e))}async getAgentDetails(e){var t,r;let s=await this.getAgent(e),a=await this.getTokens(),n=(null==(t=a.agent_tokens.find(t=>t.agent_id===e))?void 0:t.token)||("Admin"===e?a.admin_token:void 0),o=await this.getNodeDetails("agent_".concat(e));return{agent:{...s,auth_token:n},token:n,tasks:(null==(r=o.related)?void 0:r.assigned_tasks)||[],actions:o.actions||[]}}async createAgent(e){return this.request("/agents",{method:"POST",body:JSON.stringify(e)})}async terminateAgent(e){return this.request("/agents/".concat(e,"/terminate"),{method:"POST"})}async getTasks(){return this.request("/tasks")}async getTask(e){return this.request("/tasks/".concat(e))}async updateTask(e,t){return this.request("/tasks/".concat(e),{method:"PUT",body:JSON.stringify(t)})}async createTask(e){return this.request("/tasks",{method:"POST",body:JSON.stringify(e)})}async getTokens(){return this.request("/tokens")}async getAllData(){return this.request("/all-data")}async getNodeDetails(e){return this.request("/node-details?node_id=".concat(encodeURIComponent(e)))}async getMemories(e){return(await this.getAllData()).context.map(e=>({context_key:e.context_key,value:e.value,description:e.description,last_updated:e.last_updated,updated_by:e.updated_by,_metadata:{size_bytes:JSON.stringify(e.value).length,size_kb:Math.round(JSON.stringify(e.value).length/1024*100)/100,json_valid:!0,days_old:e.last_updated?Math.floor((Date.now()-new Date(e.last_updated).getTime())/864e5):void 0,is_stale:!!e.last_updated&&Date.now()-new Date(e.last_updated).getTime()>2592e6,is_large:JSON.stringify(e.value).length>10240}}))}async createMemory(e){return this.request("/memories",{method:"POST",body:JSON.stringify(e)})}async updateMemory(e,t){return this.request("/memories/".concat(encodeURIComponent(e)),{method:"PUT",body:JSON.stringify(t)})}async deleteMemory(e,t){return this.request("/memories/".concat(encodeURIComponent(e)),{method:"DELETE",body:JSON.stringify({token:t})})}async getMemoryHealth(e){return this.request("/memories/health",{method:"POST",body:JSON.stringify({token:e,show_health_analysis:!0})})}createEventSource(e){return new EventSource("".concat(this.baseUrl,"/api").concat(e))}async healthCheck(){return this.request("/health")}constructor(e=""){this.baseUrl=e}}let a=new s},5203:(e,t,r)=>{r.d(t,{DP:()=>n,MZ:()=>i,cL:()=>o});var s=r(5453),a=r(6786);let n=(0,s.v)()((0,a.Zr)((e,t)=>({theme:"system",isDark:!1,setTheme:t=>{e({theme:t});{let r="dark"===t||"system"===t&&window.matchMedia("(prefers-color-scheme: dark)").matches;e({isDark:r}),r?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")}},toggleTheme:()=>{let e=t().theme;t().setTheme("light"===e?"dark":"light")}}),{name:"theme-storage"})),o=(0,s.v)()((e,t)=>({isCollapsed:!1,setCollapsed:t=>e({isCollapsed:t}),toggle:()=>e({isCollapsed:!t().isCollapsed})})),i=(0,s.v)()(e=>({currentView:"overview",setCurrentView:t=>e({currentView:t}),isLoading:!1,setLoading:t=>e({isLoading:t}),lastUpdated:null,setLastUpdated:t=>e({lastUpdated:t})}));(0,s.v)()((e,t)=>({isOpen:!1,setOpen:t=>e({isOpen:t}),toggle:()=>e({isOpen:!t().isOpen})})),(0,s.v)()((e,t)=>({notifications:[],addNotification:r=>{e({notifications:[{...r,id:Math.random().toString(36).substr(2,9),timestamp:new Date,read:!1},...t().notifications].slice(0,50)})},markAsRead:r=>{e({notifications:t().notifications.map(e=>e.id===r?{...e,read:!0}:e)})},removeNotification:r=>{e({notifications:t().notifications.filter(e=>e.id!==r)})},clearAll:()=>e({notifications:[]})})),(0,s.v)()(e=>({query:"",setQuery:t=>e({query:t}),results:[],setResults:t=>e({results:t}),isSearching:!1,setSearching:t=>e({isSearching:t})}))},8990:(e,t,r)=>{r.d(t,{m:()=>i});var s=r(5453),a=r(6786),n=r(1886),o=r(1204);let i=(0,s.v)()((0,a.Zr)((e,t)=>({servers:[{id:"default",name:o.$.defaultServer.name,host:o.$.defaultServer.host,port:o.$.defaultServer.port,status:"disconnected",description:"Default local MCP server"}],activeServerId:null,isConnecting:!1,connectionError:null,addServer:t=>{let r={...t,id:"server_".concat(Date.now()),status:"disconnected"};e(e=>({servers:[...e.servers,r]}))},removeServer:t=>{e(e=>({servers:e.servers.filter(e=>e.id!==t),activeServerId:e.activeServerId===t?null:e.activeServerId}))},updateServer:(t,r)=>{e(e=>({servers:e.servers.map(e=>e.id===t?{...e,...r}:e)}))},setActiveServer:async r=>{let s=t().servers.find(e=>e.id===r);if(s){e({isConnecting:!0,connectionError:null});try{if(n.uE.setServer(s.host,s.port),await t().checkServerHealth(r))e(e=>({activeServerId:r,isConnecting:!1,servers:e.servers.map(e=>({...e,status:e.id===r?"connected":"disconnected",lastConnected:e.id===r?new Date().toISOString():e.lastConnected}))}));else throw Error("Server health check failed")}catch(t){e(e=>({isConnecting:!1,connectionError:t instanceof Error?t.message:"Connection failed",servers:e.servers.map(e=>({...e,status:e.id===r?"error":e.status}))}))}}},checkServerHealth:async e=>{try{let r=t().servers.find(t=>t.id===e);if(!r)return!1;n.uE.getServerUrl(),n.uE.setServer(r.host,r.port);let s=await n.uE.getSystemStatus();if(t().activeServerId!==e){let e=t().servers.find(e=>e.id===t().activeServerId);e&&n.uE.setServer(e.host,e.port)}return!0===s.server_running}catch(t){return console.error("Health check failed for server ".concat(e,":"),t),!1}},refreshAllServers:async()=>{let r=t().servers.map(async e=>{let r=await t().checkServerHealth(e.id);return{id:e.id,status:r?"connected":"disconnected"}}),s=await Promise.all(r);e(e=>({servers:e.servers.map(e=>{let t=s.find(t=>t.id===e.id);return t?{...e,status:t.status}:e})}))},disconnectServer:()=>{e(e=>({activeServerId:null,servers:e.servers.map(e=>({...e,status:"disconnected"}))})),n.uE.setServer("",0)},autoDetectServers:async()=>{for(let r of(0,o.j)())try{n.uE.setServer(r.host,r.port);let s=await n.uE.getSystemStatus();if(!0===s.server_running){let s={id:"auto_".concat(r.port),name:"Auto-detected (".concat(r.host,":").concat(r.port,")"),host:r.host,port:r.port,status:"connected",lastConnected:new Date().toISOString(),description:"Automatically detected MCP server"},a=t().servers.find(e=>e.host===r.host&&e.port===r.port);return a?e(e=>({servers:e.servers.map(e=>e.id===a.id?{...e,status:"connected",lastConnected:new Date().toISOString()}:e)})):e(e=>({servers:[...e.servers,s]})),a||s}}catch(e){console.debug("Server not found on ".concat(r.host,":").concat(r.port))}return null},clearPersistedData:()=>{e({servers:[{id:"default",name:o.$.defaultServer.name,host:o.$.defaultServer.host,port:o.$.defaultServer.port,status:"disconnected",description:"Default local MCP server"}],activeServerId:null,isConnecting:!1,connectionError:null}),localStorage.removeItem("mcp-server-store")}}),{name:"mcp-server-store",partialize:e=>({servers:e.servers,activeServerId:e.activeServerId})}))}}]);